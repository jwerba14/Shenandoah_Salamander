
model{

############## Priors for parameters 
######### All covariate relationships are held constant across years

alpha.psiSC ~ dnorm(0, 0.368)
alpha.psiSc ~ dnorm(0, 0.368)
alpha.psiC ~ dnorm(0, 0.368)

alpha.survAloneS ~ dnorm(0, 0.368)
alpha.survBothS ~ dnorm(0, 0.368)
alpha.colEmptyS ~ dnorm(0, 0.368)
alpha.colOccS ~ dnorm(0, 0.368)

alpha.survAloneC ~ dnorm(0, 0.368)
alpha.survBothC ~ dnorm(0, 0.368)
alpha.colEmptyC ~ dnorm(0, 0.368)
alpha.colOccC ~ dnorm(0, 0.368)
    
############## Detection parameters- Assume constant across years

alpha.pS ~ dnorm(0, 0.368)  
alpha.rSC~ dnorm(0, 0.368)
alpha.rSc~ dnorm(0, 0.368)
alpha.rC ~ dnorm(0, 0.368)
alpha.pC ~ dnorm(0, 0.368)

###########################################
###########  ECOLOGY MODEL ################
###########################################

## SEASON 1

for(i in 1:N){    # Loop over sites
# True state model for the partially observed true state
# True occupancy z at site i  # Shenandoah sal
  z[i,1] ~ dbern(psi.S[i])	

    psi.S[i] <- psiSC[i] * v[i,1] +
                psiSc[i] * (1 - v[i,1])

    logit(psiSC[i]) <- alpha.psiSC 
    logit(psiSc[i]) <- alpha.psiSc

# True occupancy v at site i  # Cinereus sal
  v[i,1] ~ dbern(psiC[i])
    logit(psiC[i]) <- alpha.psiC

} #i

## SEASON 2 & ON

for(k in 2:Yr) {  # Loop over years
  for(i in 1:N) { # Loop over sites

    # True state model for the partially observed true state
    z[i,k] ~ dbern(muz[i,k-1])		# True occupancy z at site i   # Shenandoah sal

    v[i,k] ~ dbern(muv[i,k-1])		# True occupancy v at site i  # Cinereus sal
    
    muz[i,k-1] <- z[i,k-1] * survAloneS[i, k-1] * (1-v[i,k-1]) + 
                  z[i,k-1] * survBothS[i, k-1]      * v[i,k-1] + 
                  (1- z[i,k-1]) * colEmptyS[i, k-1] * (1-v[i,k-1]) +
                  (1- z[i,k-1]) * colOccS[i, k-1]   * v[i,k-1]

      logit(survAloneS[i, k-1]) <- alpha.survAloneS  
      logit(survBothS[i, k-1]) <- alpha.survBothS
      logit(colEmptyS[i, k-1]) <- alpha.colEmptyS 
      logit(colOccS[i, k-1]) <- alpha.colOccS

    muv[i,k-1] <- (1-z[i,k-1])  * survAloneC[i, k-1]* v[i,k-1] + 
                  z[i,k-1]      * survBothC[i,k-1] * v[i,k-1] + 
                  (1- z[i,k-1]) * colEmptyC[i, k-1] * (1-v[i,k-1]) +
                  z[i,k-1]      * colOccC[i, k-1]   * (1-v[i,k-1])

      logit(survAloneC[i, k-1]) <- alpha.survAloneC 
      logit(survBothC[i, k-1]) <- alpha.survBothC
      logit(colEmptyC[i, k-1]) <- alpha.colEmptyC 
      logit(colOccC[i, k-1]) <- alpha.colOccC 
    
  } # i
} # k    

###########################################
########  OBSERVATION MODEL ###############
###########################################

for(k in 1:Yr) {  # Loop over years
  for(i in 1:N) { # Loop over the R sites
    for(j in 1:J) { # Loop over replicates

      # Observation model for the actual observations
      yS[i,j,k] ~ dbern(eff.pS[i,j,k])	# Detection-nondetection at i and j
    
      # Observation model for the actual observations
      yC[i,j,k] ~ dbern(eff.pC[i,j,k])	# Detection-nondetection at i and j

      # Conditional detection probabilities
      eff.pS[i,j,k] <- z[i,k] * pS[i,j,k] * (1 - v[i,k]) + 
                        z[i,k] * rSC[i,j,k] * v[i,k] * yC[i,j,k] +
                        z[i,k] * rSc[i,j,k] * v[i,k] * (1-yC[i,j,k]) 
                        
      # Use logit link function
      logit(pS[i,j,k])  <- alpha.pS
      logit(rSC[i,j,k]) <- alpha.rSC
      logit(rSc[i,j,k]) <- alpha.rSc
                        
      # Conditional detection probabilities
      eff.pC[i,j,k] <- (1 - z[i,k]) * pC[i,j,k] * v[i,k] +
                          z[i,k] * rC[i,j,k] * v[i,k] 
                          
      # Use logit link function
      logit(pC[i,j,k]) <- alpha.pC
      logit(rC[i,j,k]) <- alpha.rC
      
     # Simulate data
      yS.new[i,j,k] ~ dbern(eff.pS[i,j,k])	# Simulate data
      yC.new[i,j,k] ~ dbern(eff.pC[i,j,k])	# Simulate data

    }
  }
}



}

