
model{

############## Priors for parameters
######### All covariate relationships are held constant across years

alpha.psiS ~ dnorm(true_alpha.psiS, 0.75)
alpha.psiC ~ dnorm(true_alpha.psiC, 0.75)

alpha.survS ~ dnorm(true_alpha.survS, 0.75)
alpha.colS ~ dnorm(true_alpha.colS, 0.75)


beta.survS1 ~ dnorm(true_beta.survS1, 0.75)
beta.colS1 ~ dnorm(true_beta_colS1, 0.75)

beta.survS2 ~ dnorm(true_beta.survS2, 0.75)
beta.colS2 ~ dnorm(true_beta.colS2, 0.75)

alpha.survC ~ dnorm(true_alpha.survC, 0.75)
alpha.colC ~ dnorm(true_alpha.colC, 0.75)


beta.survC1 ~ dnorm(true_beta.survC1, 0.75)
beta.colC1 ~ dnorm(true_beta.colC1, 0.75)

beta.survC2 ~ dnorm(true_beta.survC2, 0.75)
beta.colC2 ~ dnorm(true_beta.colC2, 0.75)


############## Detection parameters- Assume constant across years

#alpha.pS ~ dnorm(true_alpha.pS, 0.75)
#alpha.pC ~ dnorm(true_alpha.pC, 0.75)


###########################################
###########  ECOLOGY MODEL ################
###########################################

## SEASON 1

for(i in 1:N){    # Loop over sites
# True state model for the partially observed true state
# True occupancy z at site i  # Shenandoah sal
  z[i,1] ~ dbern(psiS[i])

    logit(psiS[i]) <- alpha.psiS

# True occupancy v at site i  # Cinereus sal
  v[i,1] ~ dbern(psiC[i])
    logit(psiC[i]) <- alpha.psiC

} #i

## SEASON 2 & ON

for(k in 2:Yr) {  # Loop over years
  for(i in 1:N) { # Loop over sites

    # True state model for the partially observed true state
    z[i,k] ~ dbern(muz[i,k-1])		# True occupancy z at site i   # Shenandoah sal

    v[i,k] ~ dbern(muv[i,k-1])		# True occupancy v at site i  # Cinereus sal

    muz[i,k-1] <- z[i,k-1] * survS[i, k-1]  +
                  (1- z[i,k-1]) * colS[i, k-1]

      logit(survS[i, k-1]) <- alpha.survS + beta.survS1 * TEMP[i,k] + beta.survS2 * RMI[i]
      logit(colS[i, k-1]) <- alpha.colS + beta.colS1 * TEMP[i,k]+ beta.colS2 * RMI[i]

    muv[i,k-1] <- survC[i, k-1]* v[i,k-1] +
                  colC[i, k-1] * (1-v[i,k-1])

      logit(survC[i, k-1]) <- alpha.survC + beta.survC1 * TEMP[i,k]+ beta.survC2 * RMI[i]
      logit(colC[i, k-1]) <- alpha.colC + beta.colC1 * TEMP[i,k] + beta.colC2 * RMI[i]

  } # i
} # k

###########################################
########  OBSERVATION MODEL ###############
###########################################

#for(k in 1:Yr) {  # Loop over years
 # for(i in 1:N) { # Loop over the R sites
  #  for(j in 1:J) { # Loop over replicates

      # Observation model for the actual observations
     # yS[i,j,k] ~ dbern(eff.pS[i,j,k])	# Detection-nondetection at i and j

      # Observation model for the actual observations
      #yC[i,j,k] ~ dbern(eff.pC[i,j,k])	# Detection-nondetection at i and j

      # Conditional detection probabilities
      #eff.pS[i,j,k] <- z[i,k] * pS[i,j,k]

      # Conditional detection probabilities
      #eff.pC[i,j,k] <- pC[i,j,k] * v[i,k]

      # Use logit
      #logit(pS[i,j,k]) <- alpha.pS
      #logit(pC[i,j,k]) <- alpha.pC

   

    #log-likelihood calc
    #log.lik.pS[i,j,k]<-logdensity.bin(yS[i,j,k] , eff.pS[i,j,k], 1)
    #log.lik.pC[i,j,k]<-logdensity.bin(yC[i,j,k] , eff.pC[i,j,k], 1)

    #}
 # }
#}

# Sum across log-likes
#for(i in 1:N){
#  LL[i] <- sum(log.lik.pS[i,,]) + sum(log.lik.pC[i,,])
#}

#############################################################
##########  Bayesian posterior predictive check ###############
############################################################
#for(k in 1:Yr) {  # Loop over years
#  for(i in 1:N) { # Loop over the R sites
#    for(j in 1:J){
#      Presi.S[i,j,k] <- abs(yS[i,j,k]-eff.pS[i,j,k])	 # Absolute residual
#      Presi.new.S[i,j,k] <- abs(yS.new[i,j,k]-eff.pS[i,j,k])	 # Absolute residual
#
#      Presi.C[i,j,k] <- abs(yC[i,j,k]-eff.pC[i,j,k])	 # Absolute residual
#      Presi.new.C[i,j,k] <- abs(yC.new[i,j,k]-eff.pC[i,j,k])	 # Absolute residual
#
#    }
#  }
#}
#zzzfit <-  sum(Presi.S[,,]) + sum(Presi.C[,,])
#zzzfit.new <- sum(Presi.new.S[,,]) + sum(Presi.new.C[,,])
#
## Calculate the discrepancy measure, defined as the mean(p.fit > p.fitnew)
#zzz.diff <- step(zzzfit - zzzfit.new)

}

